ARM GAS  /tmp/ccEFWoVG.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.main,"ax",%progbits
  18              		.align	1
  19              		.global	main
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	main:
  25              	.LFB65:
  26              		.file 1 "./Core/Src/main.c"
   1:./Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:./Core/Src/main.c **** /**
   3:./Core/Src/main.c ****   ******************************************************************************
   4:./Core/Src/main.c ****   * @file           : main.c
   5:./Core/Src/main.c ****   * @brief          : Main program body
   6:./Core/Src/main.c ****   ******************************************************************************
   7:./Core/Src/main.c ****   * @attention
   8:./Core/Src/main.c ****   *
   9:./Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:./Core/Src/main.c ****   * All rights reserved.
  11:./Core/Src/main.c ****   *
  12:./Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:./Core/Src/main.c ****   * in the root directory of this software component.
  14:./Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:./Core/Src/main.c ****   *
  16:./Core/Src/main.c ****   ******************************************************************************
  17:./Core/Src/main.c ****   */
  18:./Core/Src/main.c **** /* USER CODE END Header */
  19:./Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:./Core/Src/main.c **** #include "main.h"
  21:./Core/Src/main.c **** 
  22:./Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:./Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:./Core/Src/main.c **** 
  25:./Core/Src/main.c **** /* USER CODE END Includes */
  26:./Core/Src/main.c **** 
  27:./Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:./Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:./Core/Src/main.c **** 
  30:./Core/Src/main.c **** /* USER CODE END PTD */
  31:./Core/Src/main.c **** 
  32:./Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccEFWoVG.s 			page 2


  33:./Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:./Core/Src/main.c **** /* USER CODE END PD */
  35:./Core/Src/main.c **** 
  36:./Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:./Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:./Core/Src/main.c **** 
  39:./Core/Src/main.c **** /* USER CODE END PM */
  40:./Core/Src/main.c **** 
  41:./Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:./Core/Src/main.c **** 
  43:./Core/Src/main.c **** /* USER CODE BEGIN PV */
  44:./Core/Src/main.c **** 
  45:./Core/Src/main.c **** /* USER CODE END PV */
  46:./Core/Src/main.c **** 
  47:./Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  48:./Core/Src/main.c **** void SystemClock_Config(void);
  49:./Core/Src/main.c **** /* USER CODE BEGIN PFP */
  50:./Core/Src/main.c **** 
  51:./Core/Src/main.c **** /* USER CODE END PFP */
  52:./Core/Src/main.c **** 
  53:./Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  54:./Core/Src/main.c **** /* USER CODE BEGIN 0 */
  55:./Core/Src/main.c **** 
  56:./Core/Src/main.c **** /* USER CODE END 0 */
  57:./Core/Src/main.c **** 
  58:./Core/Src/main.c **** /**
  59:./Core/Src/main.c ****   * @brief  The application entry point.
  60:./Core/Src/main.c ****   * @retval int
  61:./Core/Src/main.c ****   */
  62:./Core/Src/main.c **** int main(void)
  63:./Core/Src/main.c **** {
  27              		.loc 1 63 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  64:./Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  65:./Core/Src/main.c **** 
  66:./Core/Src/main.c ****   /* USER CODE END 1 */
  67:./Core/Src/main.c **** 
  68:./Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  69:./Core/Src/main.c **** 
  70:./Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  71:./Core/Src/main.c ****   HAL_Init();
  37              		.loc 1 71 3
  38 0004 FFF7FEFF 		bl	HAL_Init
  72:./Core/Src/main.c **** 
  73:./Core/Src/main.c ****   /* USER CODE BEGIN Init */
  74:./Core/Src/main.c **** 
  75:./Core/Src/main.c ****   /* USER CODE END Init */
  76:./Core/Src/main.c **** 
  77:./Core/Src/main.c ****   /* Configure the system clock */
ARM GAS  /tmp/ccEFWoVG.s 			page 3


  78:./Core/Src/main.c ****   SystemClock_Config();
  39              		.loc 1 78 3
  40 0008 FFF7FEFF 		bl	SystemClock_Config
  41              	.L2:
  79:./Core/Src/main.c **** 
  80:./Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  81:./Core/Src/main.c **** 
  82:./Core/Src/main.c ****   /* USER CODE END SysInit */
  83:./Core/Src/main.c **** 
  84:./Core/Src/main.c ****   /* Initialize all configured peripherals */
  85:./Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  86:./Core/Src/main.c **** 
  87:./Core/Src/main.c ****   /* USER CODE END 2 */
  88:./Core/Src/main.c **** 
  89:./Core/Src/main.c ****   /* Infinite loop */
  90:./Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  91:./Core/Src/main.c ****   while (1)
  42              		.loc 1 91 9 discriminator 1
  43 000c FEE7     		b	.L2
  44              		.cfi_endproc
  45              	.LFE65:
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB66:
  92:./Core/Src/main.c ****   {
  93:./Core/Src/main.c ****     /* USER CODE END WHILE */
  94:./Core/Src/main.c **** 
  95:./Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  96:./Core/Src/main.c ****   }
  97:./Core/Src/main.c ****   /* USER CODE END 3 */
  98:./Core/Src/main.c **** }
  99:./Core/Src/main.c **** 
 100:./Core/Src/main.c **** /**
 101:./Core/Src/main.c ****   * @brief System Clock Configuration
 102:./Core/Src/main.c ****   * @retval None
 103:./Core/Src/main.c ****   */
 104:./Core/Src/main.c **** void SystemClock_Config(void)
 105:./Core/Src/main.c **** {
  56              		.loc 1 105 1
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 64
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60 0000 80B5     		push	{r7, lr}
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 7, -8
  63              		.cfi_offset 14, -4
  64 0002 90B0     		sub	sp, sp, #64
  65              		.cfi_def_cfa_offset 72
  66 0004 00AF     		add	r7, sp, #0
  67              		.cfi_def_cfa_register 7
 106:./Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68              		.loc 1 106 22
ARM GAS  /tmp/ccEFWoVG.s 			page 4


  69 0006 07F11803 		add	r3, r7, #24
  70 000a 2822     		movs	r2, #40
  71 000c 0021     		movs	r1, #0
  72 000e 1846     		mov	r0, r3
  73 0010 FFF7FEFF 		bl	memset
 107:./Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  74              		.loc 1 107 22
  75 0014 3B1D     		adds	r3, r7, #4
  76 0016 0022     		movs	r2, #0
  77 0018 1A60     		str	r2, [r3]
  78 001a 5A60     		str	r2, [r3, #4]
  79 001c 9A60     		str	r2, [r3, #8]
  80 001e DA60     		str	r2, [r3, #12]
  81 0020 1A61     		str	r2, [r3, #16]
 108:./Core/Src/main.c **** 
 109:./Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 110:./Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 111:./Core/Src/main.c ****   */
 112:./Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  82              		.loc 1 112 36
  83 0022 0223     		movs	r3, #2
  84 0024 BB61     		str	r3, [r7, #24]
 113:./Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  85              		.loc 1 113 30
  86 0026 0123     		movs	r3, #1
  87 0028 BB62     		str	r3, [r7, #40]
 114:./Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  88              		.loc 1 114 41
  89 002a 1023     		movs	r3, #16
  90 002c FB62     		str	r3, [r7, #44]
 115:./Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  91              		.loc 1 115 34
  92 002e 0023     		movs	r3, #0
  93 0030 7B63     		str	r3, [r7, #52]
 116:./Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  94              		.loc 1 116 7
  95 0032 07F11803 		add	r3, r7, #24
  96 0036 1846     		mov	r0, r3
  97 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
  98 003c 0346     		mov	r3, r0
  99              		.loc 1 116 6
 100 003e 002B     		cmp	r3, #0
 101 0040 01D0     		beq	.L4
 117:./Core/Src/main.c ****   {
 118:./Core/Src/main.c ****     Error_Handler();
 102              		.loc 1 118 5
 103 0042 FFF7FEFF 		bl	Error_Handler
 104              	.L4:
 119:./Core/Src/main.c ****   }
 120:./Core/Src/main.c **** 
 121:./Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 122:./Core/Src/main.c ****   */
 123:./Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 105              		.loc 1 123 31
 106 0046 0F23     		movs	r3, #15
 107 0048 7B60     		str	r3, [r7, #4]
 124:./Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccEFWoVG.s 			page 5


 125:./Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 108              		.loc 1 125 34
 109 004a 0023     		movs	r3, #0
 110 004c BB60     		str	r3, [r7, #8]
 126:./Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 111              		.loc 1 126 35
 112 004e 0023     		movs	r3, #0
 113 0050 FB60     		str	r3, [r7, #12]
 127:./Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 114              		.loc 1 127 36
 115 0052 0023     		movs	r3, #0
 116 0054 3B61     		str	r3, [r7, #16]
 128:./Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 117              		.loc 1 128 36
 118 0056 0023     		movs	r3, #0
 119 0058 7B61     		str	r3, [r7, #20]
 129:./Core/Src/main.c **** 
 130:./Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 120              		.loc 1 130 7
 121 005a 3B1D     		adds	r3, r7, #4
 122 005c 0021     		movs	r1, #0
 123 005e 1846     		mov	r0, r3
 124 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 125 0064 0346     		mov	r3, r0
 126              		.loc 1 130 6
 127 0066 002B     		cmp	r3, #0
 128 0068 01D0     		beq	.L6
 131:./Core/Src/main.c ****   {
 132:./Core/Src/main.c ****     Error_Handler();
 129              		.loc 1 132 5
 130 006a FFF7FEFF 		bl	Error_Handler
 131              	.L6:
 133:./Core/Src/main.c ****   }
 134:./Core/Src/main.c **** }
 132              		.loc 1 134 1
 133 006e 00BF     		nop
 134 0070 4037     		adds	r7, r7, #64
 135              		.cfi_def_cfa_offset 8
 136 0072 BD46     		mov	sp, r7
 137              		.cfi_def_cfa_register 13
 138              		@ sp needed
 139 0074 80BD     		pop	{r7, pc}
 140              		.cfi_endproc
 141              	.LFE66:
 143              		.section	.text.Error_Handler,"ax",%progbits
 144              		.align	1
 145              		.global	Error_Handler
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 150              	Error_Handler:
 151              	.LFB67:
 135:./Core/Src/main.c **** 
 136:./Core/Src/main.c **** /* USER CODE BEGIN 4 */
 137:./Core/Src/main.c **** 
 138:./Core/Src/main.c **** /* USER CODE END 4 */
 139:./Core/Src/main.c **** 
ARM GAS  /tmp/ccEFWoVG.s 			page 6


 140:./Core/Src/main.c **** /**
 141:./Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 142:./Core/Src/main.c ****   * @retval None
 143:./Core/Src/main.c ****   */
 144:./Core/Src/main.c **** void Error_Handler(void)
 145:./Core/Src/main.c **** {
 152              		.loc 1 145 1
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157 0000 80B4     		push	{r7}
 158              		.cfi_def_cfa_offset 4
 159              		.cfi_offset 7, -4
 160 0002 00AF     		add	r7, sp, #0
 161              		.cfi_def_cfa_register 7
 162              	.LBB4:
 163              	.LBB5:
 164              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccEFWoVG.s 			page 7


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccEFWoVG.s 			page 8


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 165              		.loc 2 142 3
 166              		.syntax unified
 167              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 168 0004 72B6     		cpsid i
 169              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 170              		.loc 2 143 1
 171              		.thumb
 172              		.syntax unified
 173 0006 00BF     		nop
ARM GAS  /tmp/ccEFWoVG.s 			page 9


 174              	.L8:
 175              	.LBE5:
 176              	.LBE4:
 146:./Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 147:./Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 148:./Core/Src/main.c ****   __disable_irq();
 149:./Core/Src/main.c ****   while (1)
 177              		.loc 1 149 9 discriminator 1
 178 0008 FEE7     		b	.L8
 179              		.cfi_endproc
 180              	.LFE67:
 182              		.text
 183              	.Letext0:
 184              		.file 3 "/opt/st/stm32cubeide_1.10.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 185              		.file 4 "/opt/st/stm32cubeide_1.10.1/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 186              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 187              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 188              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 189              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccEFWoVG.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccEFWoVG.s:18     .text.main:0000000000000000 $t
     /tmp/ccEFWoVG.s:24     .text.main:0000000000000000 main
     /tmp/ccEFWoVG.s:54     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccEFWoVG.s:48     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccEFWoVG.s:150    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccEFWoVG.s:144    .text.Error_Handler:0000000000000000 $t
                           .group:0000000000000000 wm4.0.cb5f01749778df26340c4505df3d34d0
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.22.c006576afe7c07c6186e6885bb69b4f6
                           .group:0000000000000000 wm4.stm32f1xx.h.39.208bb8a61c892b7c37d899c49a031330
                           .group:0000000000000000 wm4.stm32f103xb.h.38.ec967d5ad9d3269cb0788eebda048e38
                           .group:0000000000000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.4f5798e999d5690b80e6ded3ecc94b37
                           .group:0000000000000000 wm4.core_cm3.h.127.f4474120f1a7524deb56f9d74ff175da
                           .group:0000000000000000 wm4.stm32f103xb.h.573.10249aa7473ca93be896fed94046a725
                           .group:0000000000000000 wm4.stm32f1xx.h.162.96b09079a093c34dbd7f0b85cbd0ddee
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.91ba5b544a4c2be2620a1e7ff0049e10
                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.57.18d01ce1aa74e9fb44dbf16f821a574a
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.95.21591bbc513aaa813c0b8640c3b32517
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.22.8763f99bc1e3e2dcf0febe9161d81b37
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1202.f8e5f9e0cf4eef7840facf5396029056
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.22.fa638d688dcc57ca806fe6a7831b0d04
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.22.51a50ef3512cd78017ce666a32d364bf
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.263.f5ebf2f545ade59412ab9261c8e35dc4
                           .group:0000000000000000 wm4.stm32f1xx_hal_exti.h.22.e26491d042c8079c3ca67eca341af862
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.22.3c14338534886827bf3aeaa2a7f412a1
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.22.001ac4d7f81ccbdcae49bd65c13858c8
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.409.cafcd2cfe701091535636be537c18293
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.22.b5f4174bb6a50d95405567b8f50e0900
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.22.5cea9a7210e6315b41724b47b5fdf203
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.22.d4e19c21f2a86fa2f8ec2c2d5f1ab2af
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.22.3438c476faafc3240bf146f143df3fcd
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.88.91065c0692bed6019c34f1e9c00589fd

UNDEFINED SYMBOLS
HAL_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
